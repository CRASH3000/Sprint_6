{"name": "Проверка заполнения формы заказа через кнопку \"Заказать\" на главной странице с оформлением заказа в браузере chrome", "status": "failed", "statusDetails": {"message": "AssertionError: Сообщение о подтверждении заказа не найдено", "trace": "self = <test_create_order.TestOrder object at 0x0000024F26AC8080>\ndata = {'address': 'Проспект Мира 15', 'first_name': 'Алла', 'last_name': 'Ахматова', 'phone': '+79007654321', ...}\nclick_order_button_method = 'click_order_button_in_main_page', confirm_order = 'yes'\nrequest = <FixtureRequest for <Function test_order_form[chrome-click_order_button_in_main_page-data1-yes]>>\n\n    @pytest.mark.parametrize(\"confirm_order\", [\"yes\", \"no\"])\n    @pytest.mark.parametrize(\"data\", test_data)\n    @pytest.mark.parametrize(\n        \"click_order_button_method\",\n        [\"click_order_button_in_header\", \"click_order_button_in_main_page\"],\n    )\n    def test_order_form(self, data, click_order_button_method, confirm_order, request):\n    \n        # Словари для сопоставления параметров с текстовыми значениями для названия теста в Allure\n        click_order_button_method_mapping = {\n            \"click_order_button_in_header\": 'через кнопку \"Заказать\" в шапке сайта',\n            \"click_order_button_in_main_page\": 'через кнопку \"Заказать\" на главной странице',\n        }\n    \n        confirm_order_mapping = {\n            \"yes\": \"с оформлением заказа\",\n            \"no\": \"с отменой заказа\",\n        }\n    \n        # Получаем текстовые значения параметров\n        click_order_button_method_text = click_order_button_method_mapping.get(click_order_button_method,\n                                                                               click_order_button_method)\n        confirm_order_text = confirm_order_mapping.get(confirm_order, confirm_order)\n    \n        # Получаем название браузера из параметра driver\n        browser_name = request.node.callspec.params.get(\"driver\", \"unknown\")\n    \n        # Динамически формируем заголовок\n        test_title = (\n            f\"Проверка заполнения формы заказа {click_order_button_method_text} \"\n            f\"{confirm_order_text} в браузере {browser_name}\"\n        )\n        allure.dynamic.title(test_title)\n    \n        click_order_button_func = getattr(self, click_order_button_method)\n        click_order_button_func()\n        self.fill_first_name(data)\n        self.fill_last_name(data)\n        self.fill_address(data)\n        self.fill_phone(data)\n        self.select_metro_station()\n        self.click_next_button()\n        self.fill_rent_date(data)\n        self.select_rent_duration()\n        self.select_scooter_color(data[\"scooter_color\"])\n        self.click_order_button()\n        self.check_order_modal_opened()\n    \n        if confirm_order == \"yes\":\n            self.click_order_modal_yes_button()\n>           self.check_order_confirmation()\n\ntests\\test_create_order.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\test_create_order.py:135: in check_order_confirmation\n    self.order_page.check_order_confirmation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.order_page.OrderPage object at 0x0000024F26B5E270>\n\n    def check_order_confirmation(self):\n        confirmation_message = self.wait.until(\n            EC.visibility_of_element_located(\n                (By.XPATH, \"//div[contains(@class, 'Order_ModalHeader__3FDaJ')]\")\n            )\n        )\n>       assert \"Заказ оформлен\" in confirmation_message.text, \"Сообщение о подтверждении заказа не найдено\"\nE       AssertionError: Сообщение о подтверждении заказа не найдено\n\npages\\order_page.py:129: AssertionError"}, "steps": [{"name": "Клик на кнопку 'Заказать' на главной странице", "status": "passed", "start": 1723300872642, "stop": 1723300893121}, {"name": "Заполнение имени", "status": "passed", "parameters": [{"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}], "start": 1723300893122, "stop": 1723300893174}, {"name": "Заполнение фамилии", "status": "passed", "parameters": [{"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}], "start": 1723300893174, "stop": 1723300893222}, {"name": "Заполнение адреса", "status": "passed", "parameters": [{"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}], "start": 1723300893222, "stop": 1723300893282}, {"name": "Заполнение телефона", "status": "passed", "parameters": [{"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}], "start": 1723300893282, "stop": 1723300893334}, {"name": "Выбор первой станции метро", "status": "passed", "start": 1723300893334, "stop": 1723300893400}, {"name": "Клик на кнопку 'Далее'", "status": "passed", "start": 1723300893400, "stop": 1723300893427}, {"name": "Заполнение даты аренды", "status": "passed", "parameters": [{"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}], "start": 1723300893428, "stop": 1723300893491}, {"name": "Выбор срока аренды", "status": "passed", "start": 1723300893491, "stop": 1723300893558}, {"name": "Выбор цвета самоката", "status": "passed", "parameters": [{"name": "color", "value": "'grey'"}], "start": 1723300893558, "stop": 1723300893577}, {"name": "Клик по кнопке 'Заказать'", "status": "passed", "start": 1723300893577, "stop": 1723300893602}, {"name": "Проверка открытия окна подтверждения заказа", "status": "passed", "start": 1723300893602, "stop": 1723300893607}, {"name": "Клик по кнопке 'Да' в окне подтверждения", "status": "passed", "start": 1723300893608, "stop": 1723300893624}, {"name": "Проверка, что появилось сообщение 'Заказ оформлен'", "status": "failed", "statusDetails": {"message": "AssertionError: Сообщение о подтверждении заказа не найдено\n", "trace": "  File \"C:\\Users\\crash\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\PycharmProjects\\YA_Sprint_6\\tests\\test_create_order.py\", line 135, in check_order_confirmation\n    self.order_page.check_order_confirmation()\n  File \"G:\\PycharmProjects\\YA_Sprint_6\\pages\\order_page.py\", line 129, in check_order_confirmation\n    assert \"Заказ оформлен\" in confirmation_message.text, \"Сообщение о подтверждении заказа не найдено\"\n"}, "start": 1723300893624, "stop": 1723300893637}], "parameters": [{"name": "driver", "value": "'chrome'"}, {"name": "click_order_button_method", "value": "'click_order_button_in_main_page'"}, {"name": "data", "value": "{'first_name': 'Алла', 'last_name': 'Ахматова', 'address': 'Проспект Мира 15', 'phone': '+79007654321', 'rent_date': '31.12.2024', 'rent_duration': 'двое суток', 'scooter_color': 'grey'}"}, {"name": "confirm_order", "value": "'yes'"}], "start": 1723300872642, "stop": 1723300893637, "uuid": "3320683a-093f-4494-af65-24a02dcd70c1", "historyId": "035480934b7509bc84ba5d98ed461d1e", "testCaseId": "bee7fafb761dd40b1e94a2912d6960a1", "fullName": "tests.test_create_order.TestOrder#test_order_form", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "FUN-Spectrum"}, {"name": "thread", "value": "16408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}